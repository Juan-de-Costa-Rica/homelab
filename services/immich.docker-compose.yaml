# =============================================================================
# IMMICH - SELF-HOSTED PHOTO & VIDEO MANAGEMENT
# =============================================================================
# Configured as read-only AI layer on top of Nextcloud photo library
# Provides search, face recognition, and AI features without managing files

services:
  immich-server:
    image: ghcr.io/immich-app/immich-server:${IMMICH_VERSION:-release}
    container_name: immich-server
    hostname: immich.local
    restart: unless-stopped

    ports:
      - "2283:2283"

    depends_on:
      immich-redis:
        condition: service_healthy
      immich-postgres:
        condition: service_healthy

    volumes:
      # IMMICH INTERNAL DATA - All Immich's internal files in one volume
      - homelab_services_immich_data:/data

      # NEXTCLOUD PHOTO LIBRARY - External library (read-only)
      # Immich watches this folder and indexes photos without moving them
      - homelab_shared_photos:/mnt/nextcloud-photos:ro

      # System timezone
      - /etc/localtime:/etc/localtime:ro

    environment:
      DB_HOSTNAME: immich-postgres
      DB_USERNAME: ${IMMICH_DB_USERNAME}
      DB_PASSWORD: ${IMMICH_DB_PASSWORD}
      DB_DATABASE_NAME: ${IMMICH_DB_NAME}
      REDIS_HOSTNAME: immich-redis
      TZ: ${TZ}
      IMMICH_VERSION: ${IMMICH_VERSION:-release}

    networks:
      - homelab_network

    labels:
      tsdproxy.enable: "true"
      tsdproxy.name: "immich"
      tsdproxy.container_port: "2283"

    healthcheck:
      disable: false

  immich-machine-learning:
    image: ghcr.io/immich-app/immich-machine-learning:${IMMICH_VERSION:-release}
    container_name: immich-machine-learning
    restart: unless-stopped

    volumes:
      - homelab_services_immich_model_cache:/cache

    environment:
      TZ: ${TZ}
      IMMICH_VERSION: ${IMMICH_VERSION:-release}

    networks:
      - homelab_network

    healthcheck:
      disable: false

  immich-redis:
    image: docker.io/valkey/valkey:8-bookworm@sha256:fea8b3e67b15729d4bb70589eb03367bab9ad1ee89c876f54327fc7c6e618571
    container_name: immich-redis
    restart: unless-stopped

    networks:
      - homelab_network

    healthcheck:
      test: redis-cli ping || exit 1
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 30s

  immich-postgres:
    image: ghcr.io/immich-app/postgres:14-vectorchord0.4.3-pgvectors0.2.0@sha256:41eacbe83eca995561fe43814fd4891e16e39632806253848efaf04d3c8a8b84
    container_name: immich-postgres
    restart: unless-stopped

    environment:
      POSTGRES_PASSWORD: ${IMMICH_DB_PASSWORD}
      POSTGRES_USER: ${IMMICH_DB_USERNAME}
      POSTGRES_DB: ${IMMICH_DB_NAME}
      POSTGRES_INITDB_ARGS: '--data-checksums'

    volumes:
      - homelab_services_immich_db_data:/var/lib/postgresql/data

    shm_size: 128mb

    networks:
      - homelab_network

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${IMMICH_DB_USERNAME} -d ${IMMICH_DB_NAME}"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # ==========================================================================
  # Immich Folder Album Creator
  # ==========================================================================
  # Community tool that automatically creates albums based on folder structure
  # Scans external library and creates/updates albums to match directory organization
  immich-folder-album-creator:
    image: salvoxia/immich-folder-album-creator:latest
    container_name: immich-folder-album-creator
    restart: unless-stopped

    depends_on:
      immich-server:
        condition: service_healthy

    volumes:
      # Mount shared photos at same path as immich-server sees it
      - homelab_shared_photos:/mnt/nextcloud-photos:ro

    environment:
      # Immich API connection
      API_URL: http://immich-server:2283/api
      API_KEY: ${IMMICH_API_KEY}

      # Root path to scan for folder-based albums
      # MUST match the path in Immich's database (originalPath)
      ROOT_PATH: /mnt/nextcloud-photos

      # Create albums for all nested folder levels
      # -1 = unlimited depth (handles Album1, Album2, Albums-From-Facebook/Beach Trip, etc.)
      ALBUM_LEVELS: -1

      # Separator for nested album names
      ALBUM_LEVEL_SEPARATOR: " - "

      # Run daily at 2am to sync new photos/folders
      CRON_EXPRESSION: "0 2 * * *"

      # Timezone for cron scheduling
      TZ: ${TZ}

      # Mode: CREATE = create and update albums
      MODE: CREATE

      # Run unattended (no interactive prompts)
      UNATTENDED: 1

    networks:
      - homelab_network

volumes:
  homelab_services_immich_data:
    name: homelab_services_immich_data

  homelab_services_immich_db_data:
    name: homelab_services_immich_db_data

  homelab_services_immich_model_cache:
    name: homelab_services_immich_model_cache
